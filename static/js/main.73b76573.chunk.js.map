{"version":3,"sources":["apis/openweathermap.ts","actions/index.ts","actions/types.ts","components/widgets/weather/LocationInput.tsx","components/widgets/weather/WeatherDetails.tsx","components/widgets/weather/WeatherPanel.tsx","components/App.tsx","reducers/positionReducer.ts","models/weather/mainInfo.ts","models/weather/temperature.ts","models/weather/details.ts","models/weather/weatherInfo.ts","reducers/weatherReducer.ts","reducers/index.ts","index.tsx"],"names":["axios","create","baseURL","fetchWeather","params","dispatch","a","units","appid","openweathermap","get","response","type","payload","data","useStyles","makeStyles","theme","createStyles","root","border","borderRadius","paddingLeft","iconButton","padding","LocationInput","classes","useDispatch","useState","location","setLocation","className","onSubmit","event","q","preventDefault","InputBase","placeholder","value","onChange","target","maxWidth","margin","color","title","textAlign","locationInput","paddingBottom","mainInfo","detailInfo","verticallyCentered","bold","fontWeight","WeatherDetails","weather","useSelector","state","Box","Grid","container","spacing","direction","justify","Typography","variant","main","item","xs","description","src","icon","width","alt","temp","display","gutterBottom","temperature","feelsLike","details","humidity","cloudiness","wind","WeatherPanel","position","useEffect","height","backgroundColor","marginTop","flexGrow","paper","palette","text","secondary","App","window","navigator","geolocation","getCurrentPosition","err","console","log","Container","Paper","getCoords","lat","latitude","lon","longitude","MainInfo","descripton","this","parseInt","TemperatureDetails","min","max","WeatherData","parseWeatherPayload","id","name","temp_min","feels_like","clouds","all","speed","combineReducers","action","coords","configureStore","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.73b76573.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://api.openweathermap.org/data/2.5'\r\n});","import openweathermap from \"../apis/openweathermap\";\r\n\r\nimport { FETCH_WEATHER, GET_POSITION } from './types'\r\n\r\nexport const fetchWeather = (params) => async dispatch => {\r\n    params.units = 'metric';\r\n    params.appid = '5ab21a7d11964ffa58b9f5966a91f6c6';\r\n    const response = await openweathermap.get('/weather', { params });\r\n    dispatch({ type: FETCH_WEATHER, payload: response.data })\r\n};\r\n\r\n\r\nexport const getPosition = () => async dispatch => {\r\n    window.navigator.geolocation.getCurrentPosition((payload) => {\r\n        dispatch({ type: GET_POSITION, payload: payload })\r\n    }, (err) => {\r\n        console.log(err);\r\n        return;\r\n    })\r\n};","// weather\r\nexport const FETCH_WEATHER = 'FETCH_WEATHER';\r\nexport const GET_POSITION = 'GET_POSITION';","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\nimport {fetchWeather} from \"../../../actions\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            border: '1px solid #d1d1d1',\r\n            borderRadius: '25px',\r\n            paddingLeft: '14px',\r\n        },\r\n        iconButton: {\r\n            padding: 10\r\n        },\r\n    }),\r\n);\r\n\r\nconst LocationInput = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [location, setLocation] = useState('');\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setLocation(event.target.value)\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        dispatch(fetchWeather({q: location}));\r\n        setLocation('');\r\n        event.preventDefault();\r\n    };\r\n\r\n    return <form className={classes.root} onSubmit={handleSubmit}>\r\n        <InputBase\r\n            type=\"text\"\r\n            placeholder=\"Change location...\"\r\n            value={location}\r\n            onChange={handleChange}\r\n        />\r\n    </form>\r\n};\r\n\r\nexport default LocationInput;","import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LocationInput from './LocationInput'\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            maxWidth: '380px',\r\n            margin: '0 auto',\r\n            color: '#02005c',\r\n        },\r\n        title: {\r\n            textAlign: 'left',\r\n        },\r\n        locationInput: {\r\n            paddingBottom: '5px'\r\n        },\r\n        mainInfo: {\r\n            textAlign: 'left',\r\n        },\r\n        detailInfo: {\r\n            textAlign: 'center',\r\n            margin: 'auto',\r\n        },\r\n        verticallyCentered: {\r\n            margin: 'auto 0',\r\n            textAlign: 'center',\r\n        },\r\n        bold: {\r\n            fontWeight: 600,\r\n        },\r\n    }),\r\n);\r\n\r\nconst WeatherDetails = () => {\r\n    const classes = useStyles();\r\n    const weather = useSelector(state => state.weather);\r\n\r\n    if (weather) {\r\n        return (\r\n            <div>\r\n                <Box className={classes.root}>\r\n                    <Grid container spacing={0} direction=\"column\">\r\n                        <Grid container justify=\"space-between\" direction=\"row\">\r\n                            <Grid className={classes.title}>\r\n                                <Typography variant=\"h5\">\r\n                                    {weather.main.location}\r\n                                </Typography></Grid>\r\n                             <Grid className={classes.locationInput}>\r\n                                <LocationInput/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container justify=\"space-evenly\" direction=\"row\" item xs={12}>\r\n                            <Grid className={classes.mainInfo} item xs={7}>\r\n                                <Grid>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        {weather.main.description}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid container justify=\"center\" direction=\"row\">\r\n                                    <Grid>\r\n                                        <div>\r\n                                            <img src={`./dashboard/assets/weather_icons/${weather.main.icon}.svg`} width='100px' alt=\"Sun\" />\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <Grid className={classes.verticallyCentered}>\r\n                                        <Typography variant=\"h4\">\r\n                                            {`${weather.main.temp} °C`}\r\n                                        </Typography>\r\n                                        <Typography variant=\"subtitle2\" display=\"block\" gutterBottom>\r\n                                            <div>Feels like:</div>\r\n                                            <div>{`${weather.temperature.feelsLike} °C`}</div>\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid className={classes.detailInfo} item xs={5}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                    <div>Humidity:</div>\r\n                                    <div className={classes.bold}>{`${weather.details.humidity}%`}</div>\r\n                                    <div>Cloudiness:</div>\r\n                                    <div className={classes.bold}>{`${weather.details.cloudiness}%`}</div>\r\n                                    <div>Wind:</div>\r\n                                    <div className={classes.bold}>{`${weather.details.wind} m/sec`}</div>\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>Loading weather...</div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default WeatherDetails;","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fetchWeather } from '../../../actions'\r\nimport WeatherDetails from './WeatherDetails'\r\n\r\nconst WeatherPanel = () => {\r\n    const dispatch = useDispatch();\r\n    const position = useSelector(state => state.position);\r\n    useEffect(() => {\r\n        dispatch(fetchWeather({...position}))\r\n    });\r\n\r\n    if (position) {\r\n       return <WeatherDetails/>\r\n    } else {\r\n        return (\r\n            <div>Waiting for geolocation permission...</div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default WeatherPanel;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Container } from '@material-ui/core';\r\nimport WeatherPanel from './widgets/weather/WeatherPanel'\r\nimport { getPosition } from '../actions/index'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: 'absolute',\r\n      height: '100%',\r\n      width: '100%',\r\n      backgroundColor: '#f5f5f5',\r\n    },\r\n    container: {\r\n      marginTop: '20px',\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function App() {\r\n  const position = useSelector(state => state.position)\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(getPosition());\r\n  }, []);\r\n\r\n  if(position) {\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container className={classes.container}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={5}>\r\n            <Paper className={classes.paper}>\r\n              <WeatherPanel/>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n  } else {\r\n    return null;\r\n  }\r\n}","import { GET_POSITION } from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n    switch (action.type) {\r\n        case GET_POSITION:\r\n            const position = (action.payload.coords) ? getCoords(action.payload.coords) : null;\r\n            return { ...position };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// helpers\r\nfunction getCoords(data) {\r\n    return {\r\n        lat: data.latitude,\r\n        lon: data.longitude\r\n    }\r\n}","export default class MainInfo {\r\n    location: string;\r\n    description: string;\r\n    temp: number;\r\n    icon: string;\r\n    constructor(location: string, descripton: string, temp: string, icon: string) {\r\n        this.location = location;\r\n        this.description = descripton;\r\n        this.temp = parseInt(temp);\r\n        this.icon = icon;\r\n    }\r\n}","export default class TemperatureDetails {\r\n    min: number;\r\n    max: number;\r\n    feelsLike: number;\r\n    constructor(min: string, max: string, feelsLike: string) {\r\n        this.min = parseInt(min);\r\n        this.max = parseInt(max);\r\n        this.feelsLike = parseInt(feelsLike);\r\n    }\r\n}","export default class WeatherDetails {\r\n    humidity: string;\r\n    cloudiness: string;\r\n    wind: string;\r\n    constructor(humidity: string, cloudiness: string, wind: string) {\r\n        this.humidity = humidity;\r\n        this.cloudiness = cloudiness;\r\n        this.wind = wind;\r\n    }\r\n}","import MainInfo from './mainInfo';\r\nimport WeatherDetails from './details';\r\nimport TemperatureDetails from './temperature';\r\n\r\nexport default class WeatherData {\r\n    main: MainInfo;\r\n    temperature: TemperatureDetails;\r\n    details: WeatherDetails;\r\n    constructor(main: MainInfo, temperature: TemperatureDetails, details: WeatherDetails) {\r\n        this.main = main;\r\n        this.temperature = temperature;\r\n        this.details = details;\r\n    }\r\n}","import {\r\n    FETCH_WEATHER\r\n} from \"../actions/types\";\r\nimport MainInfo from '../models/weather/mainInfo';\r\nimport TemperatureDetails from '../models/weather/temperature';\r\nimport WeatherDetails from '../models/weather/details'\r\nimport WeatherData from '../models/weather/weatherInfo'\r\n\r\nexport default (state = null, action) => {\r\n    switch (action.type) {\r\n        case FETCH_WEATHER:\r\n            const data = parseWeatherPayload(action.payload);\r\n            console.log(data);\r\n            return { ...data };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// helpers\r\nfunction parseWeatherPayload(payload: any) {\r\n    const main = payload.main;\r\n    const location: string = payload.name\r\n    const description: string = (payload.weather && payload.weather[0]) ? payload.weather[0].main : \"\";\r\n    const icon: string = findWatherIcon(payload.weather[0].id);\r\n    const mainInfo = new MainInfo(location, description, main.temp, icon)\r\n    const temperature = new TemperatureDetails(main.temp_min, main.temp_min, main.feels_like);\r\n    const details = new WeatherDetails(main.humidity, payload.clouds.all, payload.wind.speed)\r\n    return new WeatherData(mainInfo, temperature, details)\r\n}\r\n\r\nfunction findWatherIcon(id: number) {\r\n    if (id >= 200 && id < 300) return \"200\" // tunderstorm\r\n    if (id >= 300 && id < 400) return \"300\" // drizzle\r\n    if (id >= 500 && id < 600) return \"500\"; // rain\r\n    if (id >= 600 && id < 700) return \"600\"; // snow\r\n    if (id >= 700 && id < 800) return \"700\"; // atmosphere\r\n    if (id === 800) return \"800\"; // clear\r\n    if (id > 800) return \"801\" // clouds\r\n    return \"100\"\r\n}\r\n","import{combineReducers} from 'redux';\r\n\r\nimport positionReducer from './positionReducer'\r\nimport weatherReducer from './weatherReducer'\r\n\r\nexport default combineReducers({\r\n    weather: weatherReducer,\r\n    position: positionReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './styles/index.css';\nimport App from './components/App';\nimport reducers from './reducers';\n\nexport default function configureStore() {\n  return createStore(\n    reducers,\n    applyMiddleware(thunk)\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <App />\n    </Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}