{"version":3,"sources":["apis/openweathermap.ts","components/widgets/weather/WeatherDetails.tsx","components/widgets/weather/WeatherPanel.tsx","actions/index.ts","actions/types.ts","components/App.tsx","reducers/positionReducer.ts","models/weather/mainInfo.ts","models/weather/temperature.ts","models/weather/details.ts","models/weather/weatherInfo.ts","reducers/weatherReducer.ts","reducers/index.ts","index.tsx"],"names":["axios","create","baseURL","useStyles","makeStyles","createStyles","root","color","title","textAlign","locationInput","paddingBottom","mainInfo","detailInfo","margin","verticallyCentered","bold","fontWeight","WeatherDetails","classes","weather","useSelector","state","Box","className","Grid","container","spacing","direction","justify","Typography","variant","main","location","item","xs","description","src","icon","width","alt","temp","display","gutterBottom","temperature","feelsLike","details","humidity","cloudiness","wind","WeatherPanel","dispatch","useDispatch","position","useEffect","a","params","lat","lon","units","appid","openweathermap","get","response","type","payload","data","fetchWeather","theme","height","backgroundColor","marginTop","flexGrow","paper","padding","palette","text","secondary","App","window","navigator","geolocation","getCurrentPosition","err","console","log","Container","Paper","getCoords","latitude","longitude","MainInfo","descripton","this","parseInt","TemperatureDetails","min","max","WeatherData","parseWeatherPayload","id","name","temp_min","feels_like","clouds","all","speed","combineReducers","action","coords","configureStore","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.13b229e9.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://api.openweathermap.org/data/2.5'\r\n});","import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport LocationInput from './LocationInput'\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            color: '#02005c',\r\n        },\r\n        title: {\r\n            textAlign: 'left',\r\n        },\r\n        locationInput: {\r\n            paddingBottom: '5px'\r\n        },\r\n        mainInfo: {\r\n            textAlign: 'left',\r\n        },\r\n        detailInfo: {\r\n            textAlign: 'center',\r\n            margin: 'auto',\r\n        },\r\n        verticallyCentered: {\r\n            margin: 'auto 0',\r\n            textAlign: 'center',\r\n        },\r\n        bold: {\r\n            fontWeight: 600,\r\n        },\r\n    }),\r\n);\r\n\r\nconst WeatherDetails = () => {\r\n    const classes = useStyles();\r\n    const weather = useSelector(state => state.weather)\r\n\r\n    if (weather) {\r\n        return (\r\n            <div>\r\n                <Box className={classes.root}>\r\n                    <Grid container spacing={0} direction=\"column\">\r\n                        <Grid container justify=\"space-between\" direction=\"row\">\r\n                            <Grid className={classes.title}>\r\n                                <Typography variant=\"h5\">\r\n                                    {weather.main.location}\r\n                                </Typography></Grid>\r\n                            {/* <Grid className={classes.locationInput}>\r\n                                <LocationInput></LocationInput>\r\n                            </Grid> */}\r\n                        </Grid>\r\n                        <Grid container justify=\"space-evenly\" direction=\"row\" item xs={12}>\r\n                            <Grid className={classes.mainInfo} item xs={7}>\r\n                                <Grid>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        {weather.main.description}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid container justify=\"space-evenly\" direction=\"row\">\r\n                                    <Grid>\r\n                                        <div>\r\n                                            <img src={`./assets/weather_icons/${weather.main.icon}.svg`} width='100px' alt=\"Sun\" />\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <Grid className={classes.verticallyCentered}>\r\n                                        <Typography variant=\"h4\">\r\n                                            {`${weather.main.temp} °C`}\r\n                                        </Typography>\r\n                                        <Typography variant=\"subtitle2\" display=\"block\" gutterBottom>\r\n                                            <div>Feels like:</div>\r\n                                            <div>{`${weather.temperature.feelsLike} °C`}</div>\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid className={classes.detailInfo} item xs={5}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                    <div>Humidity:</div>\r\n                                    <div className={classes.bold}>{`${weather.details.humidity}%`}</div>\r\n                                    <div>Cloudness:</div>\r\n                                    <div className={classes.bold}>{`${weather.details.cloudiness}%`}</div>\r\n                                    <div>Wind:</div>\r\n                                    <div className={classes.bold}>{`${weather.details.wind} m/sec`}</div>\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>Loading weather...</div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default WeatherDetails;","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { fetchWeather } from '../../../actions/index'\r\n\r\nimport WeatherDetails from './WeatherDetails'\r\n\r\nconst WeatherPanel = () => {\r\n    const dispatch = useDispatch()\r\n    const position = useSelector(state => state.position)\r\n    useEffect(() => {\r\n        dispatch(fetchWeather(position))\r\n    })\r\n\r\n    if (position) {\r\n       return <WeatherDetails></WeatherDetails>\r\n    } else {\r\n        return (\r\n            <div>Waiting for geolocation permission...</div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default WeatherPanel;","import openweathermap from \"../apis/openweathermap\";\r\n\r\nimport { FETCH_WEATHER, GET_POSITION } from './types'\r\n\r\nexport const fetchWeather = (position) => async dispatch => {\r\n    const params = {\r\n        lat: position.lat,\r\n        lon: position.lon,\r\n        units: 'metric',\r\n        appid: '5ab21a7d11964ffa58b9f5966a91f6c6'\r\n    }\r\n    const response = await openweathermap.get('/weather', { params });\r\n    dispatch({ type: FETCH_WEATHER, payload: response.data })\r\n};\r\n\r\n\r\nexport const getPosition = () => async dispatch => {\r\n    window.navigator.geolocation.getCurrentPosition((payload) => {\r\n        dispatch({ type: GET_POSITION, payload: payload })\r\n    }, (err) => {\r\n        console.log(err);\r\n        return;\r\n    })\r\n};","// weather\r\nexport const FETCH_WEATHER = 'FETCH_WEATHER';\r\nexport const GET_POSITION = 'GET_POSITION';","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Container } from '@material-ui/core';\nimport WeatherPanel from './widgets/weather/WeatherPanel'\nimport { getPosition } from '../actions/index'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: 'absolute',\n      height: '100%',\n      width: '100%',\n      backgroundColor: '#f5f5f5',\n    },\n    container: {\n      marginTop: '20px',\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }),\n);\n\nexport default function App() {\n  const position = useSelector(state => state.position)\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(getPosition());\n  }, []);\n\n  if(position) {\n  return (\n    <div className={classes.root}>\n      <Container className={classes.container}>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <Paper className={classes.paper}>\n              <WeatherPanel/>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n  } else {\n    return null;\n  }\n}","import { GET_POSITION } from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n    switch (action.type) {\r\n        case GET_POSITION:\r\n            const position = (action.payload.coords) ? getCoords(action.payload.coords) : null;\r\n            return { ...position };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// helpers\r\nfunction getCoords(data) {\r\n    return {\r\n        lat: data.latitude,\r\n        lon: data.longitude\r\n    }\r\n}","export default class MainInfo {\r\n    location: string;\r\n    description: string;\r\n    temp: number;\r\n    icon: string;\r\n    constructor(location: string, descripton: string, temp: string, icon: string) {\r\n        this.location = location;\r\n        this.description = descripton;\r\n        this.temp = parseInt(temp);\r\n        this.icon = icon;\r\n    }\r\n}","export default class TemperatureDetails {\r\n    min: number;\r\n    max: number;\r\n    feelsLike: number;\r\n    constructor(min: string, max: string, feelsLike: string) {\r\n        this.min = parseInt(min);\r\n        this.max = parseInt(max);\r\n        this.feelsLike = parseInt(feelsLike);\r\n    }\r\n}","export default class WeatherDetails {\r\n    humidity: string;\r\n    cloudiness: string;\r\n    wind: string;\r\n    constructor(humidity: string, cloudiness: string, wind: string) {\r\n        this.humidity = humidity;\r\n        this.cloudiness = cloudiness;\r\n        this.wind = wind;\r\n    }\r\n}","import MainInfo from './mainInfo';\r\nimport WeatherDetails from './details';\r\nimport TemperatureDetails from './temperature';\r\n\r\nexport default class WeatherData {\r\n    main: MainInfo;\r\n    temperature: TemperatureDetails;\r\n    details: WeatherDetails;\r\n    constructor(main: MainInfo, temperature: TemperatureDetails, details: WeatherDetails) {\r\n        this.main = main;\r\n        this.temperature = temperature;\r\n        this.details = details;\r\n    }\r\n}","import {\r\n    FETCH_WEATHER\r\n} from \"../actions/types\";\r\nimport MainInfo from '../models/weather/mainInfo';\r\nimport TemperatureDetails from '../models/weather/temperature';\r\nimport WeatherDetails from '../models/weather/details'\r\nimport WeatherData from '../models/weather/weatherInfo'\r\n\r\nexport default (state = null, action) => {\r\n    switch (action.type) {\r\n        case FETCH_WEATHER:\r\n            const data = parseWeatherPayload(action.payload);\r\n            console.log(data);\r\n            return { ...data };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// helpers\r\nfunction parseWeatherPayload(payload: any) {\r\n    const main = payload.main;\r\n    const location: string = payload.name\r\n    const description: string = (payload.weather && payload.weather[0]) ? payload.weather[0].main : \"\";\r\n    const icon: string = findWatherIcon(payload.weather[0].id);\r\n    const mainInfo = new MainInfo(location, description, main.temp, icon)\r\n    const temperature = new TemperatureDetails(main.temp_min, main.temp_min, main.feels_like);\r\n    const details = new WeatherDetails(main.humidity, payload.clouds.all, payload.wind.speed)\r\n    return new WeatherData(mainInfo, temperature, details)\r\n}\r\n\r\nfunction findWatherIcon(id: number) {\r\n    if (id >= 200 && id < 300) return \"200\" // tunderstorm\r\n    if (id >= 300 && id < 400) return \"300\" // drizzle\r\n    if (id >= 500 && id < 600) return \"500\"; // rain\r\n    if (id >= 600 && id < 700) return \"600\"; // snow\r\n    if (id >= 700 && id < 800) return \"700\"; // atmosphere\r\n    if (id === 800) return \"800\"; // clear\r\n    if (id > 800) return \"801\" // clouds\r\n    return \"100\"\r\n}\r\n","import{combineReducers} from 'redux';\r\n\r\nimport positionReducer from './positionReducer'\r\nimport weatherReducer from './weatherReducer'\r\n\r\nexport default combineReducers({\r\n    weather: weatherReducer,\r\n    position: positionReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './styles/index.css';\nimport App from './components/App';\nimport reducers from './reducers';\n\nexport default function configureStore() {\n  return createStore(\n    reducers,\n    applyMiddleware(thunk)\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <App />\n    </Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}