{"version":3,"sources":["apis/openweathermap.ts","actions/weatherActions.ts","actions/types.ts","apis/newsapi.ts","components/widgets/weather/LocationInput.tsx","components/widgets/weather/WeatherDetails.tsx","components/widgets/weather/WeatherPanel.tsx","components/widgets/news/NewsDetails.tsx","components/widgets/news/NewsPanel.tsx","actions/newsActions.ts","components/App.tsx","reducers/newsReducer.ts","reducers/positionReducer.ts","models/weather/details.ts","models/weather/mainInfo.ts","models/weather/temperature.ts","models/weather/weatherInfo.ts","reducers/weatherReducer.ts","reducers/index.ts","index.tsx"],"names":["axios","create","baseURL","fetchWeather","params","dispatch","a","units","appid","openweathermap","get","response","type","payload","data","useStyles","makeStyles","theme","createStyles","root","border","borderRadius","paddingLeft","iconButton","padding","LocationInput","props","classes","useDispatch","useState","location","setLocation","className","onSubmit","event","value","q","preventDefault","setEditMode","InputBase","placeholder","onChange","target","maxWidth","margin","color","title","textAlign","paddingBottom","editIcon","paddingTop","locationInput","display","mainInfo","detailInfo","verticallyCentered","bold","fontWeight","WeatherDetails","weather","useSelector","state","editMode","renderIcon","Grid","src","main","icon","width","alt","renderTemperature","Typography","variant","temp","gutterBottom","temperature","feelsLike","Box","container","spacing","direction","justify","fontSize","onClick","item","xs","description","details","humidity","cloudiness","wind","paper","palette","text","secondary","WeatherPanel","position","useEffect","Paper","article","justifyContent","link","textDecoration","source","NewsDetails","newsList","news","renderLoading","articles","length","map","el","i","index","key","href","url","space","substring","parseArticleTitle","renderArticles","NewsPanel","country","page","pageSize","apiKey","height","backgroundColor","marginTop","flexGrow","App","window","navigator","geolocation","getCurrentPosition","err","console","log","Container","parseNews","status","articleList","Array","isArray","forEach","arr","author","name","undefined","error","getCoords","lat","latitude","lon","longitude","this","MainInfo","descripton","parseInt","TemperatureDetails","min","max","WeatherData","parseWeatherPayload","id","Temperature","temp_min","feels_like","Details","clouds","all","speed","WeatherInfo","combineReducers","action","coords","configureStore","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.e35a40e7.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://api.openweathermap.org/data/2.5'\r\n});","import openweathermap from \"../apis/openweathermap\";\r\n\r\nimport { FETCH_WEATHER, GET_POSITION } from './types'\r\n\r\nexport const fetchWeather = (params) => async dispatch => {\r\n    params.units = 'metric';\r\n    params.appid = '5ab21a7d11964ffa58b9f5966a91f6c6';\r\n    const response = await openweathermap.get('/weather', { params });\r\n    dispatch({ type: FETCH_WEATHER, payload: response.data })\r\n};\r\n\r\n\r\nexport const getPosition = () => async dispatch => {\r\n    window.navigator.geolocation.getCurrentPosition((payload) => {\r\n        dispatch({ type: GET_POSITION, payload: payload })\r\n    }, (err) => {\r\n        console.log(err);\r\n        return;\r\n    })\r\n};","// weather\r\nexport const GET_POSITION = 'GET_POSITION';\r\nexport const FETCH_WEATHER = 'FETCH_WEATHER';\r\n\r\n// news\r\nexport const FETCH_NEWS = 'FETCH_NEWS';","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://newsapi.org/v2'\r\n});","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\nimport {fetchWeather} from \"../../../actions\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            border: '1px solid #d1d1d1',\r\n            borderRadius: '25px',\r\n            paddingLeft: '14px',\r\n        },\r\n        iconButton: {\r\n            padding: 10\r\n        },\r\n    }),\r\n);\r\n\r\nconst LocationInput = (props) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [location, setLocation] = useState('');\r\n    const setEditMode = (value) => props.setEditMode(value)\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setLocation(event.target.value)\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        dispatch(fetchWeather({q: location}));\r\n        setLocation('');\r\n        event.preventDefault();\r\n        setEditMode(false);\r\n\r\n    };\r\n\r\n    return <form className={classes.root} onSubmit={handleSubmit}>\r\n        <InputBase\r\n            type=\"text\"\r\n            placeholder=\"Change location...\"\r\n            value={location}\r\n            onChange={handleChange}\r\n        />\r\n    </form>\r\n};\r\n\r\nexport default LocationInput;","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Edit from '@material-ui/icons/Edit'\r\nimport Clear from '@material-ui/icons/Clear'\r\n\r\nimport LocationInput from './LocationInput'\r\n\r\nconst url = \"https://wroclawianka.github.io/dashboard\";\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            maxWidth: '380px',\r\n            margin: '0 auto',\r\n            color: '#02005c',\r\n        },\r\n        title: {\r\n            textAlign: 'left',\r\n            paddingBottom: '12px'\r\n        },\r\n        editIcon: {\r\n            paddingLeft: '5px',\r\n            color: '#a2a2a2',\r\n            paddingTop: '7px',\r\n            \"&:hover, &:focus\": {\r\n                color: 'inherit',\r\n            },\r\n        },\r\n        locationInput: {\r\n            paddingBottom: '5px',\r\n            display: 'flex',\r\n        },\r\n        mainInfo: {\r\n            textAlign: 'left',\r\n        },\r\n        detailInfo: {\r\n            textAlign: 'center',\r\n            margin: 'auto',\r\n        },\r\n        verticallyCentered: {\r\n            margin: 'auto 0',\r\n            textAlign: 'center',\r\n        },\r\n        bold: {\r\n            fontWeight: 600,\r\n        },\r\n    }),\r\n);\r\n\r\nconst WeatherDetails = () => {\r\n    const classes = useStyles();\r\n    const weather = useSelector(state => state.weather);\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const renderTitle = () => {\r\n        return (\r\n            <Grid className={classes.title}>\r\n                <Typography variant=\"h5\">\r\n                    {weather.main.location}\r\n                </Typography>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    const renderLocationSelector = () => {\r\n        return (\r\n            <Grid>\r\n                {(editMode) ?\r\n                    <div className={classes.locationInput}>\r\n                        <LocationInput setEditMode={setEditMode} />\r\n                        <Clear\r\n                            className={classes.editIcon}\r\n                            fontSize='small'\r\n                            onClick={() => { setEditMode(false) }}\r\n                        />\r\n                    </div> :\r\n                    <Edit\r\n                        className={classes.editIcon}\r\n                        fontSize='small'\r\n                        onClick={() => { setEditMode(true) }}\r\n                    />}\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    const renderMainInfo = () => {\r\n        return (\r\n            <Grid className={classes.mainInfo} item xs={7}>\r\n                <Grid>\r\n                    <Typography variant=\"subtitle1\">\r\n                        {weather.main.description}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid container justify=\"center\" direction=\"row\">\r\n                    {renderIcon()}\r\n                    {renderTemperature()}\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    const renderIcon = () => {\r\n        return (\r\n            <Grid>\r\n                <div>\r\n                    <img\r\n                        src={`${url}/assets/weather_icons/${weather.main.icon}.svg`}\r\n                        width='100px'\r\n                        alt=\"Weather\"\r\n                    />\r\n                </div>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    const renderTemperature = () => {\r\n        return (\r\n            <Grid className={classes.verticallyCentered}>\r\n                <Typography variant=\"h4\">\r\n                    {`${weather.main.temp} °C`}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\" display=\"block\" gutterBottom>\r\n                    <div>Feels like:</div>\r\n                    <div>{`${weather.temperature.feelsLike} °C`}</div>\r\n                </Typography>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    const renderDetails = () => {\r\n        return (\r\n            <Grid className={classes.detailInfo} item xs={5}>\r\n                <Typography variant=\"subtitle2\">\r\n                    <div>Humidity:</div>\r\n                    <div className={classes.bold}>\r\n                        {`${weather.details.humidity}%`}\r\n                    </div>\r\n                    <div>Cloudiness:</div>\r\n                    <div className={classes.bold}>\r\n                        {`${weather.details.cloudiness}%`}\r\n                    </div>\r\n                    <div>Wind:</div>\r\n                    <div className={classes.bold}>\r\n                        {`${weather.details.wind} m/sec`}\r\n                    </div>\r\n                </Typography>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    if (weather) {\r\n        return (\r\n            <div>\r\n                <Box className={classes.root}>\r\n                    <Grid container spacing={0} direction=\"column\">\r\n                        <Grid container justify=\"space-between\" direction=\"row\">\r\n                            {renderTitle()}\r\n                            {renderLocationSelector()}\r\n                        </Grid>\r\n                        <Grid container justify=\"space-evenly\" direction=\"row\" item xs={12}>\r\n                            {renderMainInfo()}\r\n                            {renderDetails()}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>Loading weather...</div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default WeatherDetails;","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport { fetchWeather } from '../../../actions'\r\nimport WeatherDetails from './WeatherDetails'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            padding: theme.spacing(2),\r\n            textAlign: 'center',\r\n            color: theme.palette.text.secondary,\r\n        },\r\n    }),\r\n);\r\n\r\nconst WeatherPanel = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const position = useSelector(state => state.position);\r\n    useEffect(() => dispatch(fetchWeather({ ...position })));\r\n\r\n    const renderContent = () => {\r\n        if (position) {\r\n            return <WeatherDetails />\r\n        } else {\r\n            return (\r\n                <div>Waiting for geolocation permission...</div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={5}>\r\n            <Paper className={classes.paper}>\r\n                {renderContent()}\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default WeatherPanel;","import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        title: {\r\n            textAlign: 'left',\r\n            paddingBottom: '12px',\r\n        },\r\n        root: {\r\n            margin: '0 auto',\r\n            color: '#02005c',\r\n        },\r\n        article: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            paddingBottom: '12px',\r\n            textAlign: 'left',\r\n        },\r\n        link: {\r\n            color: 'inherit',\r\n            textDecoration: 'none',\r\n            \"&:hover\": {\r\n                textDecoration: 'underline',\r\n            },\r\n        },\r\n        source: {\r\n            color: 'inherit'\r\n        },\r\n    }),\r\n);\r\n\r\nconst NewsDetails = () => {\r\n    const classes = useStyles();\r\n    const newsList = useSelector(state => state.news);\r\n\r\n    const renderTitle = () => {\r\n        return (\r\n            <Grid className={classes.title}>\r\n                <Typography variant=\"h5\">\r\n                    News\r\n            </Typography>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    const parseArticleTitle = (title, source) => {\r\n        const space = (title.length < 60) ? (title.length - source.length + 20) : 60\r\n        return (title.length > space) ? `${title.substring(0, space)}...` : title\r\n    }\r\n\r\n    const renderArticle = (article, index) => {\r\n        return <Grid key={index} className={classes.article}>\r\n            <p>\r\n                <a href={article.url} className={classes.link} target=\"_blank\">\r\n                    {parseArticleTitle(article.title, article.source)}\r\n                </a>\r\n                <span className={classes.source}>\r\n                    {` ― ${article.source}`}\r\n                </span>\r\n            </p>\r\n        </Grid>\r\n    }\r\n\r\n    const renderArticles = () => {\r\n        const areArticles = newsList && newsList.articles && newsList.articles.length > 0;\r\n        if (areArticles) {\r\n            return <Grid>{newsList.articles.map((el, i) => renderArticle(el, i))}</Grid>\r\n        } else {\r\n            { renderLoading() }\r\n        }\r\n    }\r\n\r\n    const renderLoading = () => {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Grid container justify=\"space-evenly\" direction=\"column\">\r\n                {renderTitle()}\r\n                {renderArticles()}\r\n            </Grid>\r\n        </Box>\r\n    )\r\n};\r\n\r\nexport default NewsDetails;","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport NewsDetails from './NewsDetails'\r\n\r\nimport { fetchTopHeadlines as fetchNews } from '../../../actions'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            padding: theme.spacing(2),\r\n            textAlign: 'center',\r\n            color: theme.palette.text.secondary,\r\n        },\r\n    }),\r\n);\r\n\r\nconst NewsPanel = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    useEffect(() => { dispatch(fetchNews()) }, []);\r\n\r\n    return (\r\n        <Grid item xs={7}>\r\n            <Paper className={classes.paper}>\r\n                <NewsDetails />\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default NewsPanel;","import news from \"../apis/newsapi\";\r\n\r\nimport { FETCH_NEWS } from './types'\r\n\r\nexport const fetchTopHeadlines = () => async dispatch => {\r\n    let params = {\r\n        country: 'pl',\r\n        page: 0,\r\n        pageSize: 5,\r\n        apiKey: '1afab476e7894990baec610cf83edacd'\r\n    }\r\n    const response = await news.get('/top-headlines', { params });\r\n    dispatch({ type: FETCH_NEWS, payload: response.data })\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Container } from '@material-ui/core';\r\n\r\nimport WeatherPanel from './widgets/weather/WeatherPanel'\r\nimport NewsPanel from './widgets/news/NewsPanel'\r\n\r\nimport { getPosition } from '../actions/index'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: 'absolute',\r\n      height: '100%',\r\n      width: '100%',\r\n      backgroundColor: '#f5f5f5',\r\n    },\r\n    container: {\r\n      marginTop: '20px',\r\n      flexGrow: 1,\r\n    }\r\n  }),\r\n);\r\n\r\nexport default function App() {\r\n  const position = useSelector(state => state.position)\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(getPosition());\r\n  }, []);\r\n\r\n  if (position) {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Container className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            <WeatherPanel />\r\n            <NewsPanel />\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}","import { FETCH_NEWS } from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n    switch (action.type) {\r\n        case FETCH_NEWS:\r\n            const data = parseNews(action.payload);\r\n            return { ...{ articles: data } };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction parseNews(payload: any) {\r\n    if (payload.status === 'ok') {\r\n        const articleList = payload.articles\r\n        if (articleList && Array.isArray(articleList)) {\r\n            articleList.forEach((el, i, arr) => {\r\n                arr[i] = parseArticle(el)\r\n            })\r\n            return articleList\r\n        } else {\r\n            console.error('NewsAPI: No articles send')\r\n            return []\r\n        }\r\n    } else {\r\n        console.error('NewsApI: Issue to fetch articles');\r\n        return [];\r\n    }\r\n}\r\n\r\nfunction parseArticle(article: any) {\r\n    return {\r\n        title: article.title,\r\n        author: article.author,\r\n        source: (article.source) ? article.source.name : undefined,\r\n        url: article.url,\r\n    }\r\n}","import { GET_POSITION } from \"../actions/types\";\r\n\r\nexport default (state = null, action) => {\r\n    switch (action.type) {\r\n        case GET_POSITION:\r\n            const position = (action.payload.coords) ? getCoords(action.payload.coords) : null;\r\n            return { ...position };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// helpers\r\nfunction getCoords(data) {\r\n    return {\r\n        lat: data.latitude,\r\n        lon: data.longitude\r\n    }\r\n}","export default class WeatherDetails {\r\n    humidity: string;\r\n    cloudiness: string;\r\n    wind: string;\r\n    constructor(humidity: string, cloudiness: string, wind: string) {\r\n        this.humidity = humidity;\r\n        this.cloudiness = cloudiness;\r\n        this.wind = wind;\r\n    }\r\n}","export default class MainInfo {\r\n    location: string;\r\n    description: string;\r\n    temp: number;\r\n    icon: string;\r\n    constructor(location: string, descripton: string, temp: string, icon: string) {\r\n        this.location = location;\r\n        this.description = descripton;\r\n        this.temp = parseInt(temp);\r\n        this.icon = icon;\r\n    }\r\n}","export default class TemperatureDetails {\r\n    min: number;\r\n    max: number;\r\n    feelsLike: number;\r\n    constructor(min: string, max: string, feelsLike: string) {\r\n        this.min = parseInt(min);\r\n        this.max = parseInt(max);\r\n        this.feelsLike = parseInt(feelsLike);\r\n    }\r\n}","import MainInfo from './mainInfo';\r\nimport WeatherDetails from './details';\r\nimport TemperatureDetails from './temperature';\r\n\r\nexport default class WeatherData {\r\n    main: MainInfo;\r\n    temperature: TemperatureDetails;\r\n    details: WeatherDetails;\r\n    constructor(main: MainInfo, temperature: TemperatureDetails, details: WeatherDetails) {\r\n        this.main = main;\r\n        this.temperature = temperature;\r\n        this.details = details;\r\n    }\r\n}","import { FETCH_WEATHER } from \"../actions/types\";\r\nimport {\r\n    MainInfo,\r\n    Temperature,\r\n    Details,\r\n    WeatherInfo\r\n} from '../models/weather';\r\n\r\nexport default (state = null, action) => {\r\n    switch (action.type) {\r\n        case FETCH_WEATHER:\r\n            const data = parseWeatherPayload(action.payload);\r\n            return { ...data };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// helpers\r\nfunction parseWeatherPayload(payload: any) {\r\n    const main = payload.main;\r\n    const location: string = payload.name\r\n    const description: string = (payload.weather && payload.weather[0]) ? payload.weather[0].main : \"\";\r\n    const icon: string = findWatherIcon(payload.weather[0].id);\r\n    const mainInfo = new MainInfo(location, description, main.temp, icon)\r\n    const temperature = new Temperature(main.temp_min, main.temp_min, main.feels_like);\r\n    const details = new Details(main.humidity, payload.clouds.all, payload.wind.speed)\r\n    return new WeatherInfo(mainInfo, temperature, details)\r\n}\r\n\r\nfunction findWatherIcon(id: number) {\r\n    if (id >= 200 && id < 300) return \"200\" // tunderstorm\r\n    if (id >= 300 && id < 400) return \"300\" // drizzle\r\n    if (id >= 500 && id < 600) return \"500\"; // rain\r\n    if (id >= 600 && id < 700) return \"600\"; // snow\r\n    if (id >= 700 && id < 800) return \"700\"; // atmosphere\r\n    if (id === 800) return \"800\"; // clear\r\n    if (id > 800) return \"801\" // clouds\r\n    return \"100\"\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport newsReducer from './newsReducer'\r\nimport positionReducer from './positionReducer'\r\nimport weatherReducer from './weatherReducer'\r\n\r\nexport default combineReducers({\r\n    news: newsReducer,\r\n    weather: weatherReducer,\r\n    position: positionReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport './styles/index.css';\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nexport default function configureStore() {\r\n  return createStore(\r\n    reducers,\r\n    applyMiddleware(thunk)\r\n  );\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={configureStore()}>\r\n      <App />\r\n    </Provider>,\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}